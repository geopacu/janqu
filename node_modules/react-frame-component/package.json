{
  "_args": [
    [
      {
        "raw": "react-frame-component@^2.0.0",
        "scope": null,
        "escapedName": "react-frame-component",
        "name": "react-frame-component",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "D:\\EGADE\\20.Tesis\\repositorio\\janqu\\node_modules\\netlify-cms"
    ]
  ],
  "_from": "react-frame-component@>=2.0.0 <3.0.0",
  "_id": "react-frame-component@2.0.2",
  "_inCache": true,
  "_location": "/react-frame-component",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-frame-component-2.0.2.tgz_1516250668794_0.20056062727235258"
  },
  "_npmUser": {
    "name": "ryanseddon",
    "email": "seddon.ryan@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-frame-component@^2.0.0",
    "scope": null,
    "escapedName": "react-frame-component",
    "name": "react-frame-component",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/netlify-cms"
  ],
  "_resolved": "https://registry.npmjs.org/react-frame-component/-/react-frame-component-2.0.2.tgz",
  "_shasum": "e602a980e1d78f91f471531225b61cfdbf68e614",
  "_shrinkwrap": null,
  "_spec": "react-frame-component@^2.0.0",
  "_where": "D:\\EGADE\\20.Tesis\\repositorio\\janqu\\node_modules\\netlify-cms",
  "author": {
    "name": "Ryan Seddon"
  },
  "bugs": {
    "url": "https://github.com/ryanseddon/react-frame-component/issues"
  },
  "contributors": [
    {
      "name": "Chris Trevino",
      "email": "darthtrevino@gmail.com"
    }
  ],
  "dependencies": {},
  "description": "React component to wrap your application or component in an iFrame for encapsulation purposes",
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-core": "^6.21.0",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^6.3.2",
    "babel-plugin-transform-class-properties": "^6.19.0",
    "babel-preset-latest": "^6.16.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-stage-2": "^6.18.0",
    "babel-register": "^6.18.0",
    "chai": "^3.5.0",
    "eslint": "^3.13.1",
    "eslint-config-airbnb": "^14.0.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^3.0.2",
    "eslint-plugin-react": "^6.9.0",
    "gh-pages": "^1.1.0",
    "html-webpack-plugin": "^2.28.0",
    "karma": "^1.4.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-mocha": "^1.3.0",
    "karma-osx-reporter": "^0.2.1",
    "karma-phantomjs-launcher": "^1.0.2",
    "karma-phantomjs2-launcher": "^0.5.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^2.0.2",
    "mocha": "^3.2.0",
    "mocha-junit-reporter": "^1.13.0",
    "mocha-multi": "^0.10.0",
    "mocha-osx-reporter": "^0.1.2",
    "npm-run-all": "^4.0.1",
    "prop-types": "^15.5.9",
    "react": "^16.0.0",
    "react-dom": "^16.0.0",
    "rimraf": "^2.5.4",
    "sinon": "2.0.0-pre",
    "wallaby-webpack": "^0.0.30",
    "webpack": "1.x",
    "webpack-dev-server": "^1.16.3"
  },
  "directories": {},
  "dist": {
    "shasum": "e602a980e1d78f91f471531225b61cfdbf68e614",
    "tarball": "https://registry.npmjs.org/react-frame-component/-/react-frame-component-2.0.2.tgz"
  },
  "gitHead": "33a61e92df04d9cb08eb46468dd17f6caa5a809e",
  "homepage": "https://github.com/ryanseddon/react-frame-component",
  "keywords": [
    "React",
    "component",
    "iFrame",
    "browser"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "ryanseddon",
      "email": "seddon.ryan@gmail.com"
    }
  ],
  "name": "react-frame-component",
  "optionalDependencies": {},
  "peerDependencies": {
    "prop-types": "^15.5.9",
    "react": "^16.0.0",
    "react-dom": "^16.0.0"
  },
  "readme": "# React &lt;Frame /> component\n\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][depstat-image]][depstat-url]\n\nThis component allows you to encapsulate your entire React application or per component in an iFrame.\n\n```bash\nnpm install --save react-frame-component\n```\n\n## How to use:\n\n```js\nimport Frame from 'react-frame-component';\n```\n\nGo check out the [demo][demo-url].\n\n```html\nconst Header = ({ children }) => (\n  <Frame>\n    <h1>{children}</h1>\n  </Frame>\n);\n\nReactDOM.render(<Header>Hello</Header>, document.body);\n```\n\nOr you can wrap it at the `render` call.\n\n```html\nReactDOM.render(\n  <Frame>\n    <Header>Hello</Header>\n  </Frame>,\n  document.body\n);\n```\n\n##### Props:\n\n###### head\n`head:  PropTypes.node`\n\nThe `head` prop is a dom node that gets inserted before the children of the frame. Note that this is injected into the body of frame (see the blog post for why). This has the benefit of being able to update and works for stylesheets.\n\n###### initialContent\n`initialContent:  PropTypes.string`\n\nDefaults to `'<!DOCTYPE html><html><head></head><body><div></div></body></html>'`\n\nThe `initialContent` props is the initial html injected into frame. It is only injected once, but allows you to insert any html into the frame (e.g. a head tag, script tags, etc). Note that it does *not* update if you change the prop. Also at least one div is required in the body of the html, which we use to render the react dom into.\n\n###### mountTarget\n`mountTarget:  PropTypes.string`\n\nThe `mountTarget` props is a css selector (#target/.target) that specifies where in the `initialContent` of the iframe, children will be mounted.\n\n```html\n<Frame\n  initialContent='<!DOCTYPE html><html><head></head><body><h1>i wont be changed</h1><div id=\"mountHere\"></div></body></html>'\n  mountTarget='#mountHere'\n  >\n</Frame>\n```\n\n###### contentDidMount and contentDidUpdate\n`contentDidMount:  PropTypes.func`\n`contentDidUpdate:  PropTypes.func`\n\n`contentDidMount` and `contentDidUpdate` are conceptually equivalent to\n`componentDidMount` and `componentDidUpdate`, respecitvely. The reason these are\nneeded is because internally we call `ReactDOM.render` which starts a new set of\nlifecycle calls. This set of lifecycle calls are sometimes triggered after the\nlifecycle of the parent component, so these callbacks provide a hook to know\nwhen the frame contents are mounted and updated.\n\n###### Accessing the iframe's window and document\nThe iframe's `window` and `document` may be accessed via the React context values `window` and `document` respectively.\n\n```js\nconst MyComponent = (props, context) => {\n  const {\n    document: iframeDocument,\n    window: iframeWindow\n  } = context;\n\n  return (<...rendered jsx.../>);\n};\n\nMyComponent.contextTypes = {\n  window: PropTypes.any,\n  document: PropTypes.any\n};\n```\n\n## More info\n\nI wrote a [blog post][blog-url] about building this component.\n\n## License\n\nCopyright 2014, Ryan Seddon.\nThis content is released under the MIT license http://ryanseddon.mit-license.org\n\n[npm-url]: https://npmjs.org/package/react-frame-component\n[npm-image]: https://badge.fury.io/js/react-frame-component.png\n\n[travis-url]: http://travis-ci.org/ryanseddon/react-frame-component\n[travis-image]: https://secure.travis-ci.org/ryanseddon/react-frame-component.png?branch=master\n\n[depstat-url]: https://david-dm.org/ryanseddon/react-frame-component\n[depstat-image]: https://david-dm.org/ryanseddon/react-frame-component.png\n\n[demo-url]: http://ryanseddon.github.io/react-frame-component/\n[blog-url]: http://developer.zendesk.com/blog/2014/05/13/rendering-to-iframes-in-react/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/ryanseddon/react-frame-component.git"
  },
  "scripts": {
    "babel": "babel src -d lib",
    "build": "npm-run-all clean babel",
    "clean": "rimraf lib",
    "deploy": "gh-pages -d dist",
    "karma:dev": "karma start --browsers Chrome",
    "karma:once": "karma start --single-run",
    "lint": "eslint '*.js' '{src,test}/**/*.js*'",
    "predeploy": "webpack",
    "prepublish": "npm run build",
    "publish": "npm run deploy",
    "serve": "webpack-dev-server --host 0.0.0.0 --hot --inline --history-api-fallback",
    "start": "npm-run-all --parallel karma:dev serve",
    "test": "npm-run-all --parallel lint karma:once --sequential build"
  },
  "version": "2.0.2"
}
