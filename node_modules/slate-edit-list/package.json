{
  "_args": [
    [
      {
        "raw": "slate-edit-list@^0.10.1",
        "scope": null,
        "escapedName": "slate-edit-list",
        "name": "slate-edit-list",
        "rawSpec": "^0.10.1",
        "spec": ">=0.10.1 <0.11.0",
        "type": "range"
      },
      "D:\\EGADE\\20.Tesis\\repositorio\\janqu\\node_modules\\netlify-cms"
    ]
  ],
  "_from": "slate-edit-list@>=0.10.1 <0.11.0",
  "_id": "slate-edit-list@0.10.3",
  "_inCache": true,
  "_location": "/slate-edit-list",
  "_nodeVersion": "6.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/slate-edit-list-0.10.3.tgz_1517844570366_0.08556324848905206"
  },
  "_npmUser": {
    "name": "soreine",
    "email": "soreine.plume@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "slate-edit-list@^0.10.1",
    "scope": null,
    "escapedName": "slate-edit-list",
    "name": "slate-edit-list",
    "rawSpec": "^0.10.1",
    "spec": ">=0.10.1 <0.11.0",
    "type": "range"
  },
  "_requiredBy": [
    "/netlify-cms"
  ],
  "_resolved": "https://registry.npmjs.org/slate-edit-list/-/slate-edit-list-0.10.3.tgz",
  "_shasum": "10f0b78c0bc9fd29e22d274d4f559bb1e00d8930",
  "_shrinkwrap": null,
  "_spec": "slate-edit-list@^0.10.1",
  "_where": "D:\\EGADE\\20.Tesis\\repositorio\\janqu\\node_modules\\netlify-cms",
  "bugs": {
    "url": "https://github.com/GitbookIO/slate-edit-list/issues"
  },
  "dependencies": {},
  "description": "A Slate plugin to handle keyboard events in lists.",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.0.2",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "babelify": "^8.0.0",
    "browserify": "^13.3.0",
    "eslint": "^4.10.0",
    "eslint-config-gitbook": "^2.0.3",
    "eslint-plugin-import": "^2.8.0",
    "expect": "^1.20.2",
    "flow-bin": "^0.57.3",
    "gh-pages": "^0.11.0",
    "http-server": "^0.9.0",
    "immutable": "^3.8.2",
    "mocha": "^3.0.1",
    "react": "^16.0.0",
    "react-dom": "^16.0.0",
    "read-metadata": "^1.0.0",
    "slate": "^0.31.8",
    "slate-hyperscript": "^0.4.6",
    "slate-react": "^0.10.0",
    "stringify": "^5.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "10f0b78c0bc9fd29e22d274d4f559bb1e00d8930",
    "tarball": "https://registry.npmjs.org/slate-edit-list/-/slate-edit-list-0.10.3.tgz"
  },
  "gitHead": "fe84b98b5fc24b44248f836eba06465409a3b1fa",
  "homepage": "https://github.com/GitbookIO/slate-edit-list#readme",
  "keywords": [
    "slate"
  ],
  "license": "Apache-2.0",
  "main": "./dist/index.js",
  "maintainers": [
    {
      "name": "samypesse",
      "email": "samypesse@gmail.com"
    },
    {
      "name": "zhouzi",
      "email": "hello@gabinaureche.com"
    },
    {
      "name": "soreine",
      "email": "soreine.plume@gmail.com"
    },
    {
      "name": "jpreynat",
      "email": "johan.preynat@gmail.com"
    },
    {
      "name": "aarono",
      "email": "aaron.omullan@gmail.com"
    },
    {
      "name": "gitbook-bot",
      "email": "contact@gitbook.com"
    }
  ],
  "name": "slate-edit-list",
  "optionalDependencies": {},
  "peerDependencies": {
    "immutable": "^3.8.2",
    "slate": ">=0.29.0 <0.32.0"
  },
  "readme": "# slate-edit-list\n\n[![NPM version](https://badge.fury.io/js/slate-edit-list.svg)](http://badge.fury.io/js/slate-edit-list)\n[![Linux Build Status](https://travis-ci.org/GitbookIO/slate-edit-list.png?branch=master)](https://travis-ci.org/GitbookIO/slate-edit-list)\n\nA Slate plugin to handle keyboard events in lists. List items can contain blocks.\n\nDemo: [gitbookio.github.io/slate-edit-list/](https://gitbookio.github.io/slate-edit-list/)\n\n### Install\n\n```\nnpm install slate-edit-list\n```\n\n### Features\n\nNatural keybindings:\n\n- Pressing <kbd>Enter</kbd> insert a new list item\n- Pressing <kbd>Shift+Enter</kbd> split the block in the list item\n- Pressing <kbd>Tab</kbd> increase the depth of the item (creates a sub-list)\n- Pressing <kbd>Shift+Tab</kbd> decrease the depth of the item\n- Pressing <kbd>Delete</kbd> (OSX) or <kbd>Backspace</kbd> at the start, remove the list item (or the list)\n\nSimple validation/normalization (see [assumptions about the schema](#assumption-about-the-schema)):\n\n- Lists can contain only list items, and at least one.\n- List items can only be the direct children of a list.\n- List items must always contain blocks.\n\nUseful transforms: see [Utilities and Transform](#utilities-and-transform).\n\n### Simple Usage\n\n```js\nimport EditList from 'slate-edit-list'\n\nconst plugins = [\n  EditList()\n]\n```\n\n#### Arguments\n\nThis plugin accepts options to redefine the following block types:\n\n- `<String> types=[\"ol_list\", \"ul_list\"]` — the array of possible types for list containers. First value will be used as default.\n- `<String> typeItem=\"list_item\"` — type for list items.\n- `<String> typeDefault=\"paragraph\"` — type for default block in list items.\n\n#### Assumption about the schema\n\nYou can use this plugins with custom list block types (using plugin [arguments](#arguments)). But your lists structure should still conform to a few rules. These rules are implemented as schema.\n\nHere is what a minimal list would look like:\n\n\n```yaml\nnodes:\n    - kind: block\n      type: ul_list # Default type for bulleted lists container\n      nodes:\n          - kind: block\n            type: list_item # List containers can only contain list items\n            nodes:\n              # List items contain blocks. They cannot be the direct container of text.\n              - kind: block\n                type: paragraph # Default type of blocks in a list item\n                nodes:\n                  - kind: text\n                    text: Hello World\n```\n\nAnd here is an example of a multi-level list:\n\n```yaml\nnodes:\n  - kind: block\n    type: ol_list\n    nodes:\n      - kind: block\n        type: list_item\n        nodes:\n          - kind: block\n            type: paragraph\n            nodes:\n              - kind: text\n                text: Item 1\n          - kind: block\n            type: ol_list\n            nodes:\n              - kind: block\n                type: list_item\n                nodes:\n                  - kind: block\n                    type: paragraph\n                    nodes:\n                      - kind: text\n                        text: Item 1.1\n              - kind: block\n                type: list_item\n                nodes:\n                  - kind: block\n                    type: paragraph\n                    nodes:\n                      - kind: text\n                        text: Item 1.2\n```\n\n### Utilities and Transform\n\n`slate-edit-list` exports utilities and transforms:\n\n#### `plugin.utils.isSelectionInList(state: State) => Boolean`\n\nReturn true if selection is inside a list (and it can be unwrap).\n\n#### `plugin.utils.isList(node: Node) => Boolean`\n\nReturn true if the node is one of the list type.\n\n#### `plugin.utils.getItemDepth(state: State, block: Block?) => Number`\n\nReturns the depth of the current item (or the depth of the given block) in a list. 0 means not in a list.\n\n#### `plugin.utils.getCurrentItem(state: State, block: Block?) => Block || Void`\n\nReturns the current item at selection (or at the given block).\n\n#### `plugin.utils.getCurrentList(state: State, block: Block?) => Block || Void`\n\nReturns the current list at selection (or at the given block).\n\n#### `plugin.utils.getItemsAtRange(state: State, range: Selection?) => List<Node>`\n\nReturn the list of items at the given range. The returned items are the highest list of of successive items that cover the given range.\n\nThe returned list is empty if no such list can be found.\n\n#### `plugin.changes.increaseItemDepth(transform: Transform) => Transform`\n\nIncrease the depth of the current item.\n\n#### `plugin.changes.decreaseItemDepth(transform: Transform) => Transform`\n\nDecrease the depth of the current item.\n\n#### `plugin.changes.wrapInList(transform: Transform, type: String?, data: Object|Data?) => Transform`\n\nWrap the current blocks in list items of a list container of the given type. You can pass optional data for the created list container.\n\n#### `plugin.changes.unwrapList(transform: Transform) => Transform`\n\nUnwrap all items at range from their list.\n\n#### `plugin.changes.splitListItem(transform: Transform) => Transform`\n\nSplit current block into a new list item.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/GitbookIO/slate-edit-list.git"
  },
  "scripts": {
    "build-example": "browserify ./example/main.js -o ./example/bundle.js -t [ babelify --presets [ es2015 react stage-0 ] ] -t [ stringify --extensions [.yaml] ]",
    "deploy-example": "npm run build-example && gh-pages -d ./example",
    "lint": "eslint ./",
    "postpublish": "npm run deploy-example",
    "prepublish": "babel ./lib --out-dir ./dist",
    "serve-example": "http-server ./example/ -p 8081",
    "start": "npm run build-example && npm run serve-example",
    "test": "mocha ./tests/all.js --compilers js:babel-register --reporter=list"
  },
  "version": "0.10.3"
}
