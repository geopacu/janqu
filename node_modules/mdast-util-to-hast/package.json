{
  "_args": [
    [
      {
        "raw": "mdast-util-to-hast@^2.2.0",
        "scope": null,
        "escapedName": "mdast-util-to-hast",
        "name": "mdast-util-to-hast",
        "rawSpec": "^2.2.0",
        "spec": ">=2.2.0 <3.0.0",
        "type": "range"
      },
      "D:\\EGADE\\20.Tesis\\repositorio\\janqu\\node_modules\\remark-rehype"
    ]
  ],
  "_from": "mdast-util-to-hast@>=2.2.0 <3.0.0",
  "_id": "mdast-util-to-hast@2.5.0",
  "_inCache": true,
  "_location": "/mdast-util-to-hast",
  "_nodeVersion": "4.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mdast-util-to-hast-2.5.0.tgz_1507649248448_0.8137216190807521"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "2.14.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mdast-util-to-hast@^2.2.0",
    "scope": null,
    "escapedName": "mdast-util-to-hast",
    "name": "mdast-util-to-hast",
    "rawSpec": "^2.2.0",
    "spec": ">=2.2.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/remark-rehype"
  ],
  "_resolved": "https://registry.npmjs.org/mdast-util-to-hast/-/mdast-util-to-hast-2.5.0.tgz",
  "_shasum": "f087844d255c7540f36906da30ba106c0ee5ee2f",
  "_shrinkwrap": null,
  "_spec": "mdast-util-to-hast@^2.2.0",
  "_where": "D:\\EGADE\\20.Tesis\\repositorio\\janqu\\node_modules\\remark-rehype",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/syntax-tree/mdast-util-to-hast/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "collapse-white-space": "^1.0.0",
    "detab": "^2.0.0",
    "mdast-util-definitions": "^1.2.0",
    "mdurl": "^1.0.1",
    "trim": "0.0.1",
    "trim-lines": "^1.0.0",
    "unist-builder": "^1.0.1",
    "unist-util-generated": "^1.1.0",
    "unist-util-position": "^3.0.0",
    "unist-util-visit": "^1.1.0",
    "xtend": "^4.0.1"
  },
  "description": "Transform MDAST to HAST",
  "devDependencies": {
    "browserify": "^14.0.0",
    "esmangle": "^1.0.1",
    "nyc": "^11.0.0",
    "remark-cli": "^3.0.0",
    "remark-preset-wooorm": "^3.0.0",
    "tape": "^4.0.0",
    "xo": "^0.18.0"
  },
  "directories": {},
  "dist": {
    "shasum": "f087844d255c7540f36906da30ba106c0ee5ee2f",
    "tarball": "https://registry.npmjs.org/mdast-util-to-hast/-/mdast-util-to-hast-2.5.0.tgz"
  },
  "files": [
    "lib",
    "index.js"
  ],
  "gitHead": "6995cf5cd757793f75bc0253d591761987fac0e3",
  "homepage": "https://github.com/syntax-tree/mdast-util-to-hast#readme",
  "keywords": [
    "mdast",
    "util",
    "hast"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "mdast-util-to-hast",
  "optionalDependencies": {},
  "readme": "# mdast-util-to-hast [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nTransform [MDAST][] to [HAST][].\n\n> **Note** You probably want to use [remark-rehype][].\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install mdast-util-to-hast\n```\n\n## Usage\n\nSay we have the following `example.md`:\n\n```markdown\n## Hello **World**!\n```\n\n...and next to it, `example.js`:\n\n```javascript\nvar inspect = require('unist-util-inspect');\nvar unified = require('unified');\nvar parse = require('remark-parse');\nvar vfile = require('to-vfile');\nvar toHAST = require('mdast-util-to-hast');\n\nvar tree = unified().use(parse).parse(vfile.readSync('example.md'));\n\nconsole.log(inspect(toHAST(tree)));\n```\n\nWhich when running with `node example` yields:\n\n```txt\nroot[1] (1:1-2:1, 0-20)\n└─ element[3] (1:1-1:20, 0-19) [tagName=\"h2\"]\n   ├─ text: \"Hello \" (1:4-1:10, 3-9)\n   ├─ element[1] (1:10-1:19, 9-18) [tagName=\"strong\"]\n   │  └─ text: \"World\" (1:12-1:17, 11-16)\n   └─ text: \"!\" (1:19-1:20, 18-19)\n```\n\n## API\n\n### `toHAST(node[, options])`\n\nTransform the given [MDAST][] tree to a [HAST][] tree.\n\n###### `options.allowDangerousHTML`\n\nWhether to allow `html` nodes and inject them as raw HTML (`boolean`,\ndefault: `false`).  Only do this when compiling later with\n`hast-util-to-html`.\n\n###### `options.commonmark`\n\nSet to `true` (default: `false`) to prefer the first when duplicate definitions\nare found.  The default behaviour is to prefer the last duplicate definition.\n\n###### `options.handlers`\n\nObject mapping [MDAST nodes][mdast] to functions\nhandling those elements.\nTake a look at [`lib/handlers/`][handlers] for examples.\n\n###### Returns\n\n[`HASTNode`][hast].\n\n###### Note\n\n*   [`yaml`][mdast-yaml] and [`html`][mdast-html] nodes are ignored\n*   [`position`][unist-position]s are properly patched\n*   Unknown nodes with `children` are transformed to `div` elements\n*   Unknown nodes with `value` are transformed to `text` nodes\n*   If `node.data.hName` is set, it’s used as the HAST element’s tag-name\n*   If `node.data.hProperties` is set, it’s mixed into the HAST element’s\n    properties\n*   If `node.data.hChildren` is set, it’s used as the element’s HAST\n    children\n\n## Related\n\n*   [`mdast-util-to-nlcst`](https://github.com/syntax-tree/mdast-util-to-nlcst)\n    — Transform MDAST to NLCST\n*   [`hast-util-sanitize`](https://github.com/syntax-tree/hast-util-sanitize)\n    — Sanitize HAST nodes\n*   [`hast-util-to-mdast`](https://github.com/syntax-tree/hast-util-to-mdast)\n    — Transform HAST to MDAST\n*   [`remark-rehype`](https://github.com/wooorm/remark-rehype)\n    — rehype support for remark\n*   [`rehype-remark`](https://github.com/wooorm/remark-remark)\n    — remark support for rehype\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/mdast-util-to-hast.svg\n\n[travis]: https://travis-ci.org/syntax-tree/mdast-util-to-hast\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/mdast-util-to-hast.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/mdast-util-to-hast\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[hast]: https://github.com/syntax-tree/hast\n\n[mdast-yaml]: https://github.com/syntax-tree/mdast#yaml\n\n[mdast-html]: https://github.com/syntax-tree/mdast#html\n\n[unist-position]: https://github.com/syntax-tree/unist#location\n\n[handlers]: lib/handlers\n\n[remark-rehype]: https://github.com/wooorm/remark-rehype\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/syntax-tree/mdast-util-to-hast.git"
  },
  "scripts": {
    "build": "npm run build-md && npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js --bare -s mdastUtilToHAST > mdast-util-to-hast.js",
    "build-mangle": "esmangle mdast-util-to-hast.js > mdast-util-to-hast.min.js",
    "build-md": "remark . -qfo",
    "lint": "xo",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test/index.js"
  },
  "version": "2.5.0",
  "xo": {
    "space": true,
    "esnext": false,
    "rules": {
      "guard-for-in": "off"
    },
    "ignores": [
      "mdast-util-to-hast.js"
    ]
  }
}
