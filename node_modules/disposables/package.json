{
  "_args": [
    [
      {
        "raw": "disposables@^1.0.1",
        "scope": null,
        "escapedName": "disposables",
        "name": "disposables",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "D:\\EGADE\\20.Tesis\\repositorio\\janqu\\node_modules\\react-dnd"
    ]
  ],
  "_from": "disposables@>=1.0.1 <2.0.0",
  "_id": "disposables@1.0.2",
  "_inCache": true,
  "_location": "/disposables",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/disposables-1.0.2.tgz_1515326911284_0.2134415116161108"
  },
  "_npmUser": {
    "name": "gaearon",
    "email": "dan.abramov@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "disposables@^1.0.1",
    "scope": null,
    "escapedName": "disposables",
    "name": "disposables",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-dnd"
  ],
  "_resolved": "https://registry.npmjs.org/disposables/-/disposables-1.0.2.tgz",
  "_shasum": "36c6a674475f55a2d6913567a601444e487b4b6e",
  "_shrinkwrap": null,
  "_spec": "disposables@^1.0.1",
  "_where": "D:\\EGADE\\20.Tesis\\repositorio\\janqu\\node_modules\\react-dnd",
  "author": {
    "name": "Cloud Programmability Team",
    "url": "https://github.com/Reactive-Extensions/RxJS/blob/master/authors.txt"
  },
  "bugs": {
    "url": "https://github.com/gaearon/disposables/issues"
  },
  "contributors": [
    {
      "name": "Dan Abramov",
      "email": "dan.abramov@me.com"
    }
  ],
  "dependencies": {},
  "description": "Disposables let you safely compose resource disposal semantics",
  "devDependencies": {
    "babel": "^5.0.10",
    "expect.js": "^0.3.1",
    "istanbul": "~0.3.7",
    "mocha": "^2.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "36c6a674475f55a2d6913567a601444e487b4b6e",
    "tarball": "https://registry.npmjs.org/disposables/-/disposables-1.0.2.tgz"
  },
  "files": [
    "modules"
  ],
  "gitHead": "32eda716678fae152c67d8347a95bab415d51224",
  "homepage": "https://github.com/gaearon/disposables",
  "license": "Apache-2.0",
  "main": "modules/index.js",
  "maintainers": [
    {
      "name": "gaearon",
      "email": "dan.abramov@gmail.com"
    }
  ],
  "name": "disposables",
  "optionalDependencies": {},
  "readme": "# NOT ACTIVELY MAINTAINED\n\n>**This project works fine but is not actively maintained.**  \n>**For the new code, you might want to try the new official [rx.disposables](https://github.com/Reactive-Extensions/rx.disposables) package instead.**\n\n# disposables [![npm package](https://img.shields.io/npm/v/disposables.svg?style=flat-square)](https://www.npmjs.org/package/disposables)\n\nDisposables let you safely compose resource disposal semantics.  \nThink DOM nodes, event handlers, socket connections.\n\n**This implementation of disposables is extracted from [RxJS](https://github.com/Reactive-Extensions/RxJS/blob/master/src/core/disposables).**  \nI took the liberty to tweak the code style to my liking and provide this as a standalone package.\n\nThis tiny package includes several disposables:\n\n* [`Disposable`](https://github.com/gaearon/disposables/blob/master/src/Disposable.js) ensures its `dispose` action runs only once;\n* [`CompositeDisposable`](https://github.com/gaearon/disposables/blob/master/src/CompositeDisposable.js) ensures a group of disposables are disposed together;\n* [`SerialDisposable`](https://github.com/gaearon/disposables/blob/master/src/SerialDisposable.js) switches underlying disposables on the fly and disposes them.\n\nThe API is *mostly* the same as RxJS except stricter in a few places.  \nIt does not strive for 100% API compatibility with RxJS, but generally behavior is the same.\n\nIt's best if you consult the [source](https://github.com/gaearon/disposables/tree/master/src/) and [tests](https://github.com/gaearon/disposables/tree/master/src/__tests__), as classes are small and few.\n\n### Usage\n\n```js\nimport { Disposable, CompositeDisposable, SerialDisposable } from 'disposables';\n\n// or you can import just the ones you need to keep it even tinier\n// import SerialDisposable from 'disposables/modules/SerialDisposable';\n\nfunction attachHandlers(node) {\n\tlet someHandler = ...;\n\tnode.addEventHandler(someHandler);\n\n\t// use Disposable to guarantee single execution\n\treturn new Disposable(() => {\n\t  node.removeEventHandler(someHandler);\n\t});\n}\n\n// CompositeDisposable lets you compose several disposables...\nlet nodes = ...;\nlet compositeDisp = new CompositeDisposable(nodes.map(attachHandlers));\n\n// and more later...\nlet moreNodes = ...\nmoreNodes.map(attachHandlers).forEach(d => compositeDisp.add(d));\n\n// and dispose them at once!\nfunction goodbye() {\n\tcompositeDisp.dispose();\n}\n\n// ... or replace with a bunch of new ones ...\nlet serialDisp = new SerialDisposable();\nserialDisp.setDisposable(compositeDisp);\n\nfunction replaceNodes(newNodes) {\n\tlet nextCompositeDisp = new CompositeDisposable(newNodes.map(attachHandlers));\n\n\t// release all the previous disposables:\n\tserialDisp.setDisposable(nextCompositeDisp);\n}\n\n// with a guarantee of each dispose() called only once.\n```\n\n### License\n\nLike the original RxJS code, it is licensed under Apache 2.0.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gaearon/disposables.git"
  },
  "scripts": {
    "build": "./scripts/build",
    "prepublish": "npm run build",
    "test": "./scripts/test",
    "test-cov": "./scripts/test-cov"
  },
  "version": "1.0.2"
}
